# Copyright 2020 Tadashi G. Takaoka
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# List of architectures.
ARCHS = \
	mc6809  \
	mc6800  \
	mos6502 \
	i8051   \
	i8080   \
	z80     \
	z8      \
	tlcs90  \
	ins8060 \
	ins8070 \
	cdp1802 \
	i8086   \
	tms9900 \
	mc68000 \
	z8000   \
	ns32000
# define OBJS_arch variable which contains architecture related objects.
define objs-arch # arch
OBJS_$(1) = table_$(1).o reg_$(1).o

endef

# target list for each architecture.
TGT_mc6809  = mc6809 hd6309
TGT_mc6800  = mc6800 mc6801 mc68hc11 hd6301
TGT_mos6502 = mos6502 g65sc02 r65c02 w65c02s w65c816
TGT_i8051   = i8051
TGT_i8080   = i8080 i8085
TGT_z80     = z80 i8080_z80syn i8085_z80syn
TGT_z8      = z8 z86c z88
TGT_tlcs90  = tlcs90
TGT_ins8060 = ins8060
TGT_ins8070 = ins8070
TGT_cdp1802 = cdp1802
TGT_i8086   = i8086
TGT_tms9900 = tms9900 tms9995 tms99105
TGT_mc68000 = mc68000
TGT_z8000   = z8k1 z8k2
TGT_ns32000 = ns32k

# CPU for each target
CPU_mc6809   = 6809
CPU_hd6309   = 6309
CPU_mc6800   = 6800
CPU_mc6801   = 6801
CPU_mc68hc11 = 6811
CPU_hd6301   = 6301
CPU_mos6502  = 6502
CPU_g65sc02  = 65SC02
CPU_r65c02   = 65C02
CPU_w65c02s  = W65C02S
CPU_w65c816  = 65816
CPU_i8051    = 8051
CPU_i8080    = 8080
CPU_i8085    = 8085
CPU_z80      = Z80
CPU_i8080_z80syn = 8080
CPU_i8085_z80syn = 8085
CPU_z8       = Z8601
CPU_z86c     = Z86C40
CPU_z88      = Z88C00
CPU_tlcs90   = TLCS90
CPU_ins8060  = SC/MP
CPU_ins8070  = 8070
CPU_cdp1802  = 1802
CPU_i8086    = 8086
CPU_tms9900  = TMS9900
CPU_tms9995  = TMS9995
CPU_tms99105 = TMS99105
CPU_mc68000  = 68000
CPU_z8k1     = Z8001
CPU_z8k2     = Z8002
CPU_ns32k    = 32032

# targets with Motorola S19 format
S19_OUTS = $(TGT_mc6809) $(TGT_mc6800) mos6502 g65sc02 r65c02 w65c02s m6811
# targets with Motorola S28 format
S28_OUTS = w65c816 $(TGT_mc68000) m68k
# other targets use Intel HEX format
define __out-fmt-internal # target
$(if $(filter $(1),$(S19_OUTS)),s19,$(if $(filter $(1),$(S28_OUTS)),s28,hex))
endef
define out-fmt # file
$(call __out-fmt-internal,$(subst gen_,,$(subst test_,,$(1))))
endef

# Local Variables:
# mode: makefile-gmake
# End:
# vim: set ft=make:

#include "config_hd6309.h"

#include "entry_hd6309.h"
#include "table_hd6309.h"
#include "text_hd6309.h"

static constexpr Entry HD6309_P00[] PROGMEM = {
    P00(0x01, OIM,   BYTE, HD6309, IMMDIR)
    P00(0x02, AIM,   BYTE, HD6309, IMMDIR)
    P00(0x05, EIM,   BYTE, HD6309, IMMDIR)
    P00(0x0B, TIM,   BYTE, HD6309, IMMDIR)
    P00(0x14, SEXW,  WORD, HD6309, INHR)
    P00(0x61, OIM,   BYTE, HD6309, IMMIDX)
    P00(0x62, AIM,   BYTE, HD6309, IMMIDX)
    P00(0x65, EIM,   BYTE, HD6309, IMMIDX)
    P00(0x6B, TIM,   BYTE, HD6309, IMMIDX)
    P00(0x71, OIM,   BYTE, HD6309, IMMEXT)
    P00(0x72, AIM,   BYTE, HD6309, IMMEXT)
    P00(0x75, EIM,   BYTE, HD6309, IMMEXT)
    P00(0x7B, TIM,   BYTE, HD6309, IMMEXT)
    P00(0xCD, LDQ,   LONG, HD6309, IMM)
};

static constexpr Entry HD6309_P10[] PROGMEM = {
    P10(0x30, ADDR,  NONE, HD6309, REGS)
    P10(0x31, ADCR,  NONE, HD6309, REGS)
    P10(0x32, SUBR,  NONE, HD6309, REGS)
    P10(0x33, SBCR,  NONE, HD6309, REGS)
    P10(0x34, ANDR,  NONE, HD6309, REGS)
    P10(0x35, ORR,   NONE, HD6309, REGS)
    P10(0x36, EORR,  NONE, HD6309, REGS)
    P10(0x37, CMPR,  NONE, HD6309, REGS)
    P10(0x38, PSHSW, NONE, HD6309, INHR)
    P10(0x39, PULSW, NONE, HD6309, INHR)
    P10(0x3A, PSHUW, NONE, HD6309, INHR)
    P10(0x3B, PULUW, NONE, HD6309, INHR)
    P10(0x40, NEGD,  WORD, HD6309, INHR)
    P10(0x43, COMD,  WORD, HD6309, INHR)
    P10(0x44, LSRD,  WORD, HD6309, INHR)
    P10(0x46, RORD,  WORD, HD6309, INHR)
    P10(0x47, ASRD,  WORD, HD6309, INHR)
    P10(0x48, ASLD,  WORD, HD6309, INHR)
    P10(0x48, LSLD,  WORD, HD6309, INHR)
    P10(0x49, ROLD,  WORD, HD6309, INHR)
    P10(0x4A, DECD,  WORD, HD6309, INHR)
    P10(0x4C, INCD,  WORD, HD6309, INHR)
    P10(0x4D, TSTD,  WORD, HD6309, INHR)
    P10(0x4F, CLRD,  WORD, HD6309, INHR)
    P10(0x53, COMW,  WORD, HD6309, INHR)
    P10(0x54, LSRW,  WORD, HD6309, INHR)
    P10(0x56, RORW,  WORD, HD6309, INHR)
    P10(0x59, ROLW,  WORD, HD6309, INHR)
    P10(0x5A, DECW,  WORD, HD6309, INHR)
    P10(0x5C, INCW,  WORD, HD6309, INHR)
    P10(0x5D, TSTW,  WORD, HD6309, INHR)
    P10(0x5F, CLRW,  WORD, HD6309, INHR)
    P10(0x80, SUBW,  WORD, HD6309, IMM)
    P10(0x81, CMPW,  WORD, HD6309, IMM)
    P10(0x82, SBCD,  WORD, HD6309, IMM)
    P10(0x84, ANDD,  WORD, HD6309, IMM)
    P10(0x85, BITD,  WORD, HD6309, IMM)
    P10(0x86, LDW,   WORD, HD6309, IMM)
    P10(0x88, EORD,  WORD, HD6309, IMM)
    P10(0x89, ADCD,  WORD, HD6309, IMM)
    P10(0x8A, ORD,   WORD, HD6309, IMM)
    P10(0x8B, ADDW,  WORD, HD6309, IMM)
    P10(0x90, SUBW,  WORD, HD6309, DIRP)
    P10(0x91, CMPW,  WORD, HD6309, DIRP)
    P10(0x92, SBCD,  WORD, HD6309, DIRP)
    P10(0x94, ANDD,  WORD, HD6309, DIRP)
    P10(0x95, BITD,  WORD, HD6309, DIRP)
    P10(0x96, LDW,   WORD, HD6309, DIRP)
    P10(0x97, STW,   WORD, HD6309, DIRP)
    P10(0x98, EORD,  WORD, HD6309, DIRP)
    P10(0x99, ADCD,  WORD, HD6309, DIRP)
    P10(0x9A, ORD,   WORD, HD6309, DIRP)
    P10(0x9B, ADDW,  WORD, HD6309, DIRP)
    P10(0xA0, SUBW,  WORD, HD6309, INDX)
    P10(0xA1, CMPW,  WORD, HD6309, INDX)
    P10(0xA2, SBCD,  WORD, HD6309, INDX)
    P10(0xA4, ANDD,  WORD, HD6309, INDX)
    P10(0xA5, BITD,  WORD, HD6309, INDX)
    P10(0xA6, LDW,   WORD, HD6309, INDX)
    P10(0xA7, STW,   WORD, HD6309, INDX)
    P10(0xA8, EORD,  WORD, HD6309, INDX)
    P10(0xA9, ADCD,  WORD, HD6309, INDX)
    P10(0xAA, ORD,   WORD, HD6309, INDX)
    P10(0xAB, ADDW,  WORD, HD6309, INDX)
    P10(0xB0, SUBW,  WORD, HD6309, EXTD)
    P10(0xB1, CMPW,  WORD, HD6309, EXTD)
    P10(0xB2, SBCD,  WORD, HD6309, EXTD)
    P10(0xB4, ANDD,  WORD, HD6309, EXTD)
    P10(0xB5, BITD,  WORD, HD6309, EXTD)
    P10(0xB6, LDW,   WORD, HD6309, EXTD)
    P10(0xB7, STW,   WORD, HD6309, EXTD)
    P10(0xB8, EORD,  WORD, HD6309, EXTD)
    P10(0xB9, ADCD,  WORD, HD6309, EXTD)
    P10(0xBA, ORD,   WORD, HD6309, EXTD)
    P10(0xBB, ADDW,  WORD, HD6309, EXTD)
    P10(0xDC, LDQ,   LONG, HD6309, DIRP)
    P10(0xDD, STQ,   LONG, HD6309, DIRP)
    P10(0xEC, LDQ,   LONG, HD6309, INDX)
    P10(0xED, STQ,   LONG, HD6309, INDX)
    P10(0xFC, LDQ,   LONG, HD6309, EXTD)
    P10(0xFD, STQ,   LONG, HD6309, EXTD)
};

static constexpr Entry HD6309_P11[] PROGMEM = {
    P11(0x30, BAND,  BYTE, HD6309, BITOP)
    P11(0x31, BIAND, BYTE, HD6309, BITOP)
    P11(0x32, BOR,   BYTE, HD6309, BITOP)
    P11(0x33, BIOR,  BYTE, HD6309, BITOP)
    P11(0x34, BEOR,  BYTE, HD6309, BITOP)
    P11(0x35, BIEOR, BYTE, HD6309, BITOP)
    P11(0x36, LDBT,  BYTE, HD6309, BITOP)
    P11(0x37, STBT,  BYTE, HD6309, BITOP)
    P11(0x38, TFM,   NONE, HD6309, TFRM) /* R+,R+ */
    P11(0x39, TFM,   NONE, HD6309, TFRM) /* R-,R- */
    P11(0x3A, TFM,   NONE, HD6309, TFRM) /* R+,R */
    P11(0x3B, TFM,   NONE, HD6309, TFRM) /* R,R+ */
    P11(0x3C, BITMD, BYTE, HD6309, IMM)
    P11(0x3D, LDMD,  BYTE, HD6309, IMM)
    P11(0x43, COME,  BYTE, HD6309, INHR)
    P11(0x4A, DECE,  BYTE, HD6309, INHR)
    P11(0x4C, INCE,  BYTE, HD6309, INHR)
    P11(0x4D, TSTE,  BYTE, HD6309, INHR)
    P11(0x4F, CLRE,  BYTE, HD6309, INHR)
    P11(0x53, COMF,  BYTE, HD6309, INHR)
    P11(0x5A, DECF,  BYTE, HD6309, INHR)
    P11(0x5C, INCF,  BYTE, HD6309, INHR)
    P11(0x5D, TSTF,  BYTE, HD6309, INHR)
    P11(0x5F, CLRF,  BYTE, HD6309, INHR)
    P11(0x80, SUBE,  BYTE, HD6309, IMM)
    P11(0x81, CMPE,  BYTE, HD6309, IMM)
    P11(0x86, LDE,   BYTE, HD6309, IMM)
    P11(0x8B, ADDE,  BYTE, HD6309, IMM)
    P11(0x8D, DIVD,  WORD, HD6309, IMM)
    P11(0x8E, DIVQ,  WORD, HD6309, IMM)
    P11(0x8F, MULD,  WORD, HD6309, IMM)
    P11(0x90, SUBE,  BYTE, HD6309, DIRP)
    P11(0x91, CMPE,  BYTE, HD6309, DIRP)
    P11(0x96, LDE,   BYTE, HD6309, DIRP)
    P11(0x97, STE,   BYTE, HD6309, DIRP)
    P11(0x9B, ADDE,  BYTE, HD6309, DIRP)
    P11(0x9D, DIVD,  BYTE, HD6309, DIRP)
    P11(0x9E, DIVQ,  WORD, HD6309, DIRP)
    P11(0x9F, MULD,  WORD, HD6309, DIRP)
    P11(0xA0, SUBE,  BYTE, HD6309, INDX)
    P11(0xA1, CMPE,  BYTE, HD6309, INDX)
    P11(0xA6, LDE,   BYTE, HD6309, INDX)
    P11(0xA7, STE,   BYTE, HD6309, INDX)
    P11(0xAB, ADDE,  BYTE, HD6309, INDX)
    P11(0xAD, DIVD,  BYTE, HD6309, INDX)
    P11(0xAE, DIVQ,  WORD, HD6309, INDX)
    P11(0xAF, MULD,  WORD, HD6309, INDX)
    P11(0xB0, SUBE,  BYTE, HD6309, EXTD)
    P11(0xB1, CMPE,  BYTE, HD6309, EXTD)
    P11(0xB6, LDE,   BYTE, HD6309, EXTD)
    P11(0xB7, STE,   BYTE, HD6309, EXTD)
    P11(0xBB, ADDE,  BYTE, HD6309, EXTD)
    P11(0xBD, DIVD,  BYTE, HD6309, EXTD)
    P11(0xBE, DIVQ,  WORD, HD6309, EXTD)
    P11(0xBF, MULD,  WORD, HD6309, EXTD)
    P11(0xC0, SUBF,  BYTE, HD6309, IMM)
    P11(0xC1, CMPF,  BYTE, HD6309, IMM)
    P11(0xC6, LDF,   BYTE, HD6309, IMM)
    P11(0xCB, ADDF,  BYTE, HD6309, IMM)
    P11(0xD0, SUBF,  BYTE, HD6309, DIRP)
    P11(0xD1, CMPF,  BYTE, HD6309, DIRP)
    P11(0xD6, LDF,   BYTE, HD6309, DIRP)
    P11(0xD7, STF,   BYTE, HD6309, DIRP)
    P11(0xDB, ADDF,  BYTE, HD6309, DIRP)
    P11(0xE0, SUBF,  BYTE, HD6309, INDX)
    P11(0xE1, CMPF,  BYTE, HD6309, INDX)
    P11(0xE6, LDF,   BYTE, HD6309, INDX)
    P11(0xE7, STF,   BYTE, HD6309, INDX)
    P11(0xEB, ADDF,  BYTE, HD6309, INDX)
    P11(0xF0, SUBF,  BYTE, HD6309, EXTD)
    P11(0xF1, CMPF,  BYTE, HD6309, EXTD)
    P11(0xF6, LDF,   BYTE, HD6309, EXTD)
    P11(0xF7, STF,   BYTE, HD6309, EXTD)
    P11(0xFB, ADDF,  BYTE, HD6309, EXTD)
};

static constexpr target::opcode_t PREFIX_P00 = 0x00;
static constexpr target::opcode_t PREFIX_P10 = 0x10;
static constexpr target::opcode_t PREFIX_P11 = 0x11;

static constexpr EntryPage HD6309_PAGES[] = {
    { PREFIX_P00, &HD6309_P00[0], ARRAY_END(HD6309_P00) },
    { PREFIX_P10, &HD6309_P10[0], ARRAY_END(HD6309_P10) },
    { PREFIX_P11, &HD6309_P11[0], ARRAY_END(HD6309_P11) },
};

template<>
Error TableHd6309<HD6309>::searchName(Insn &insn) const {
    if (TableHd6309<MC6809>::table()->searchName(insn) == OK)
        return OK;
    if (searchPages(insn, insn.name(), ARRAY_RANGE(HD6309_PAGES)) == OK)
        return OK;
    return UNKNOWN_INSTRUCTION;
}

template<>
Error TableHd6309<HD6309>::searchNameAndAddrMode(Insn &insn) const {
    if (TableHd6309<MC6809>::table()->searchNameAndAddrMode(insn) == OK)
        return OK;
    if (searchPages(insn, insn.name(), insn.addrMode(), ARRAY_RANGE(HD6309_PAGES)) == OK)
        return OK;
    return UNKNOWN_INSTRUCTION;
}

template<>
Error TableHd6309<HD6309>::searchInsnCode(Insn &insn) const {
    if (TableHd6309<MC6809>::table()->searchInsnCode(insn) == OK)
        return OK;
    if (searchPages(insn, insn.insnCode(), ARRAY_RANGE(HD6309_PAGES)) == OK)
        return OK;
    return UNKNOWN_INSTRUCTION;
}

static const TableHd6309<HD6309> HD6309Table;

template<>
const TableHd6309<HD6309> *TableHd6309<HD6309>::table() {
    return &HD6309Table;
}

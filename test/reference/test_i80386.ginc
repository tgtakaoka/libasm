;### Copyright 2025 Tadashi G. Takaoka
;###
;### Licensed under the Apache License, Version 2.0 (the "License");
;### you may not use this file except in compliance with the License.
;### You may obtain a copy of the License at
;###
;###     http://www.apache.org/licenses/LICENSE-2.0
;###
;### Unless required by applicable law or agreed to in writing, software
;### distributed under the License is distributed on an "AS IS" BASIS,
;### WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;### See the License for the specific language governing permissions and
;### limitations under the License.

;### Data Transfer
;### Stack
        push    fs
        pop     fs
        push    gs
        pop     gs
        pushd   0x12345678
        pushad
        popad
        pushfd
        popfd
;### Type conversion
        cwde
        cdq
        movsx   ax, al
        movsx   cx, ah
        movsx   dx, byte ptr [bx+si]
        movsx   bx, byte ptr [bx+di]
        movsx   sp, byte ptr [bp+si]
        movsx   bp, byte ptr [bp+di]
        movsx   si, byte ptr [si]
        movsx   di, byte ptr [di]
        movsx   ax, byte ptr [0x1234]
        movsx   cx, byte ptr [bx]
        movsx   dx, byte ptr [bx+si+0x34]
        movsx   bx, byte ptr [bx+di+0x34]
        movsx   sp, byte ptr [bp+si+0x34]
        movsx   bp, byte ptr [bp+di+0x34]
        movsx   si, byte ptr [si+0x34]
        movsx   di, byte ptr [di+0x34]
        movsx   ax, byte ptr [bp+0x34]
        movsx   cx, byte ptr [bx+0x34]
        movsx   dx, byte ptr [bx+si+0x1234]
        movsx   bx, byte ptr [bx+di+0x1234]
        movsx   sp, byte ptr [bp+si+0x1234]
        movsx   bp, byte ptr [bp+di+0x1234]
        movsx   si, byte ptr [si+0x1234]
        movsx   di, byte ptr [di+0x1234]
        movsx   ax, byte ptr [bp+0x1234]
        movsx   cx, byte ptr [bx+0x1234]
        movsx   eax, al
        movsx   ecx, ah
        movsx   edx, byte ptr [bx+si]
        movsx   ebx, byte ptr [bx+di]
        movsx   esp, byte ptr [bp+si]
        movsx   ebp, byte ptr [bp+di]
        movsx   esi, byte ptr [si]
        movsx   edi, byte ptr [di]
        movsx   eax, byte ptr [0x1234]
        movsx   ecx, byte ptr [bx]
        movsx   edx, byte ptr [bx+si+0x34]
        movsx   ebx, byte ptr [bx+di+0x34]
        movsx   esp, byte ptr [bp+si+0x34]
        movsx   ebp, byte ptr [bp+di+0x34]
        movsx   esi, byte ptr [si+0x34]
        movsx   edi, byte ptr [di+0x34]
        movsx   eax, byte ptr [bp+0x34]
        movsx   ecx, byte ptr [bx+0x34]
        movsx   edx, byte ptr [bx+si+0x1234]
        movsx   ebx, byte ptr [bx+di+0x1234]
        movsx   esp, byte ptr [bp+si+0x1234]
        movsx   ebp, byte ptr [bp+di+0x1234]
        movsx   esi, byte ptr [si+0x1234]
        movsx   edi, byte ptr [di+0x1234]
        movsx   eax, byte ptr [bp+0x1234]
        movsx   ecx, byte ptr [bx+0x1234]
        movsx   eax, cx
        movsx   ecx, dx
        movsx   edx, word ptr [bx+si]
        movsx   ebx, word ptr [bx+di]
        movsx   esp, word ptr [bp+si]
        movsx   ebp, word ptr [bp+di]
        movsx   esi, word ptr [si]
        movsx   edi, word ptr [di]
        movsx   eax, word ptr [0x1234]
        movsx   ecx, word ptr [bx]
        movsx   edx, word ptr [bx+si+0x34]
        movsx   ebx, word ptr [bx+di+0x34]
        movsx   esp, word ptr [bp+si+0x34]
        movsx   ebp, word ptr [bp+di+0x34]
        movsx   esi, word ptr [si+0x34]
        movsx   edi, word ptr [di+0x34]
        movsx   eax, word ptr [bp+0x34]
        movsx   ecx, word ptr [bx+0x34]
        movsx   edx, word ptr [bx+si+0x1234]
        movsx   ebx, word ptr [bx+di+0x1234]
        movsx   esp, word ptr [bp+si+0x1234]
        movsx   ebp, word ptr [bp+di+0x1234]
        movsx   esi, word ptr [si+0x1234]
        movsx   edi, word ptr [di+0x1234]
        movsx   eax, word ptr [bp+0x1234]
        movsx   ecx, word ptr [bx+0x1234]
     
;### Local Variables:
;### mode: asm
;### End:
;### vim: set ft=asm:
